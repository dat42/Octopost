node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 1000
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 250
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "enqueue_input/Placeholder"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_1"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_2"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "enqueue_input/Placeholder"
  input: "enqueue_input/Placeholder_1"
  input: "enqueue_input/Placeholder_2"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/sub/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 250
      }
    }
  }
}
node {
  name: "enqueue_input/sub"
  op: "Sub"
  input: "enqueue_input/random_shuffle_queue_Size"
  input: "enqueue_input/sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum"
  op: "Maximum"
  input: "enqueue_input/Maximum/x"
  input: "enqueue_input/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Cast"
  op: "Cast"
  input: "enqueue_input/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0013333333190530539
      }
    }
  }
}
node {
  name: "enqueue_input/mul"
  op: "Mul"
  input: "enqueue_input/Cast"
  input: "enqueue_input/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  op: "ScalarSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  input: "enqueue_input/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueMany/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 560
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueMany"
  op: "QueueDequeueManyV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "random_shuffle_queue_DequeueMany/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\035\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02809387817978859
      }
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02809387817978859
      }
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "EmbedSequence/embeddings/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 26
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Initializer/random_uniform/sub"
  op: "Sub"
  input: "EmbedSequence/embeddings/Initializer/random_uniform/max"
  input: "EmbedSequence/embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Initializer/random_uniform/mul"
  op: "Mul"
  input: "EmbedSequence/embeddings/Initializer/random_uniform/RandomUniform"
  input: "EmbedSequence/embeddings/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Initializer/random_uniform"
  op: "Add"
  input: "EmbedSequence/embeddings/Initializer/random_uniform/mul"
  input: "EmbedSequence/embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "EmbedSequence/embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7552
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Assign"
  op: "Assign"
  input: "EmbedSequence/embeddings"
  input: "EmbedSequence/embeddings/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "EmbedSequence/embeddings/read"
  op: "Identity"
  input: "EmbedSequence/embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "EmbedSequence/embedding_lookup"
  op: "Gather"
  input: "EmbedSequence/embeddings/read"
  input: "random_shuffle_queue_DequeueMany:1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 10
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "unstack"
  op: "Unpack"
  input: "EmbedSequence/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
  attr {
    key: "num"
    value {
      i: 10
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 560
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/GRUCellZeroState/Const"
  input: "rnn/GRUCellZeroState/Const_1"
  input: "rnn/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 560
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/zeros"
  op: "Fill"
  input: "rnn/GRUCellZeroState/concat"
  input: "rnn/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.17320507764816284
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.17320507764816284
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 46
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "rnn/gru_cell/gates/kernel"
  input: "rnn/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "rnn/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "unstack"
  input: "rnn/GRUCellZeroState/zeros"
  input: "rnn/rnn/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "rnn/gru_cell/gates/bias"
  input: "rnn/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/read"
  op: "Identity"
  input: "rnn/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates/split/split_dim"
  input: "rnn/rnn/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates/split"
  input: "rnn/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20000000298023224
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 69
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "rnn/gru_cell/candidate/kernel"
  input: "rnn/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "rnn/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "unstack"
  input: "rnn/rnn/gru_cell/candidate/mul"
  input: "rnn/rnn/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "rnn/gru_cell/candidate/bias"
  input: "rnn/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "rnn/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates/split:1"
  input: "rnn/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub/x"
  input: "rnn/rnn/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub"
  input: "rnn/rnn/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul"
  input: "rnn/rnn/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/concat"
  op: "ConcatV2"
  input: "unstack:1"
  input: "rnn/rnn/gru_cell/add"
  input: "rnn/rnn/gru_cell/gates_1/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_1/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_1/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_1/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_1/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_1/split"
  input: "rnn/rnn/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/concat"
  op: "ConcatV2"
  input: "unstack:1"
  input: "rnn/rnn/gru_cell/candidate_1/mul"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_2"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_1/split:1"
  input: "rnn/rnn/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_1"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_1/x"
  input: "rnn/rnn/gru_cell/gates_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_3"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_1"
  input: "rnn/rnn/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_1"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_2"
  input: "rnn/rnn/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/concat"
  op: "ConcatV2"
  input: "unstack:2"
  input: "rnn/rnn/gru_cell/add_1"
  input: "rnn/rnn/gru_cell/gates_2/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_2/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_2/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_2/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_2/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_2/split"
  input: "rnn/rnn/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/concat"
  op: "ConcatV2"
  input: "unstack:2"
  input: "rnn/rnn/gru_cell/candidate_2/mul"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_4"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_2/split:1"
  input: "rnn/rnn/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_2"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_2/x"
  input: "rnn/rnn/gru_cell/gates_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_5"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_2"
  input: "rnn/rnn/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_2"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_4"
  input: "rnn/rnn/gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/concat"
  op: "ConcatV2"
  input: "unstack:3"
  input: "rnn/rnn/gru_cell/add_2"
  input: "rnn/rnn/gru_cell/gates_3/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_3/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_3/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_3/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_3/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_3/split"
  input: "rnn/rnn/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/concat"
  op: "ConcatV2"
  input: "unstack:3"
  input: "rnn/rnn/gru_cell/candidate_3/mul"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_6"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_3/split:1"
  input: "rnn/rnn/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_3"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_3/x"
  input: "rnn/rnn/gru_cell/gates_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_7"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_3"
  input: "rnn/rnn/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_3"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_6"
  input: "rnn/rnn/gru_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/concat"
  op: "ConcatV2"
  input: "unstack:4"
  input: "rnn/rnn/gru_cell/add_3"
  input: "rnn/rnn/gru_cell/gates_4/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_4/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_4/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_4/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_4/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_4/split"
  input: "rnn/rnn/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/concat"
  op: "ConcatV2"
  input: "unstack:4"
  input: "rnn/rnn/gru_cell/candidate_4/mul"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_8"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_4/split:1"
  input: "rnn/rnn/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_4"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_4/x"
  input: "rnn/rnn/gru_cell/gates_4/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_9"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_4"
  input: "rnn/rnn/gru_cell/candidate_4/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_4"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_8"
  input: "rnn/rnn/gru_cell/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/concat"
  op: "ConcatV2"
  input: "unstack:5"
  input: "rnn/rnn/gru_cell/add_4"
  input: "rnn/rnn/gru_cell/gates_5/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_5/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_5/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_5/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_5/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_5/split"
  input: "rnn/rnn/gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/concat"
  op: "ConcatV2"
  input: "unstack:5"
  input: "rnn/rnn/gru_cell/candidate_5/mul"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_10"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_5/split:1"
  input: "rnn/rnn/gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_5/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_5"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_5/x"
  input: "rnn/rnn/gru_cell/gates_5/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_11"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_5"
  input: "rnn/rnn/gru_cell/candidate_5/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_5"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_10"
  input: "rnn/rnn/gru_cell/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_6/gates/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_6/gates/concat"
  op: "ConcatV2"
  input: "unstack:6"
  input: "rnn/rnn/gru_cell/add_5"
  input: "rnn/rnn/gru_cell/gates_6/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_6/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_6/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_6/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_6/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_6/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_6/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_6/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_6/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_6/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_6/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_6/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_6/split"
  input: "rnn/rnn/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_6/candidate/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_6/candidate/concat"
  op: "ConcatV2"
  input: "unstack:6"
  input: "rnn/rnn/gru_cell/candidate_6/mul"
  input: "rnn/rnn/gru_cell/candidate_6/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_6/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_6/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_6/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_6/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_12"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_6/split:1"
  input: "rnn/rnn/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_6/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_6"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_6/x"
  input: "rnn/rnn/gru_cell/gates_6/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_13"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_6"
  input: "rnn/rnn/gru_cell/candidate_6/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_6"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_12"
  input: "rnn/rnn/gru_cell/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_7/gates/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_7/gates/concat"
  op: "ConcatV2"
  input: "unstack:7"
  input: "rnn/rnn/gru_cell/add_6"
  input: "rnn/rnn/gru_cell/gates_7/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_7/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_7/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_7/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_7/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_7/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_7/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_7/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_7/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_7/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_7/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_7/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_7/split"
  input: "rnn/rnn/gru_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_7/candidate/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_7/candidate/concat"
  op: "ConcatV2"
  input: "unstack:7"
  input: "rnn/rnn/gru_cell/candidate_7/mul"
  input: "rnn/rnn/gru_cell/candidate_7/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_7/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_7/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_7/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_7/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_14"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_7/split:1"
  input: "rnn/rnn/gru_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_7/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_7"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_7/x"
  input: "rnn/rnn/gru_cell/gates_7/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_15"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_7"
  input: "rnn/rnn/gru_cell/candidate_7/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_7"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_14"
  input: "rnn/rnn/gru_cell/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_8/gates/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_8/gates/concat"
  op: "ConcatV2"
  input: "unstack:8"
  input: "rnn/rnn/gru_cell/add_7"
  input: "rnn/rnn/gru_cell/gates_8/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_8/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_8/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_8/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_8/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_8/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_8/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_8/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_8/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_8/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_8/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_8/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_8/split"
  input: "rnn/rnn/gru_cell/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_8/candidate/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_8/candidate/concat"
  op: "ConcatV2"
  input: "unstack:8"
  input: "rnn/rnn/gru_cell/candidate_8/mul"
  input: "rnn/rnn/gru_cell/candidate_8/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_8/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_8/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_8/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_8/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_16"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_8/split:1"
  input: "rnn/rnn/gru_cell/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_8/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_8"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_8/x"
  input: "rnn/rnn/gru_cell/gates_8/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_17"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_8"
  input: "rnn/rnn/gru_cell/candidate_8/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_8"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_16"
  input: "rnn/rnn/gru_cell/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_9/gates/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_9/gates/concat"
  op: "ConcatV2"
  input: "unstack:9"
  input: "rnn/rnn/gru_cell/add_8"
  input: "rnn/rnn/gru_cell/gates_9/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_9/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_9/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_9/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_9/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_9/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_9/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_9/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_9/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_9/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_9/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_9/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_9/split"
  input: "rnn/rnn/gru_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_9/candidate/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_9/candidate/concat"
  op: "ConcatV2"
  input: "unstack:9"
  input: "rnn/rnn/gru_cell/candidate_9/mul"
  input: "rnn/rnn/gru_cell/candidate_9/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_9/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_9/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_9/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_9/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_18"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_9/split:1"
  input: "rnn/rnn/gru_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_9/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_9"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_9/x"
  input: "rnn/rnn/gru_cell/gates_9/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_19"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_9"
  input: "rnn/rnn/gru_cell/candidate_9/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_9"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_18"
  input: "rnn/rnn/gru_cell/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 264
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "Assign"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/read"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "Assign"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/read"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/add_9"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "dense/BiasAdd"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 15
      }
    }
  }
}
node {
  name: "one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "one_hot"
  op: "OneHot"
  input: "random_shuffle_queue_DequeueMany:2"
  input: "one_hot/depth"
  input: "one_hot/on_value"
  input: "one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Cast"
  op: "Cast"
  input: "one_hot"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_loss/Rank_1"
  input: "softmax_cross_entropy_loss/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_loss/Shape_1"
  input: "softmax_cross_entropy_loss/Slice/begin"
  input: "softmax_cross_entropy_loss/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/concat/values_0"
  input: "softmax_cross_entropy_loss/Slice"
  input: "softmax_cross_entropy_loss/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Reshape"
  op: "Reshape"
  input: "dense/BiasAdd"
  input: "softmax_cross_entropy_loss/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_loss/Rank_2"
  input: "softmax_cross_entropy_loss/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_loss/Shape_2"
  input: "softmax_cross_entropy_loss/Slice_1/begin"
  input: "softmax_cross_entropy_loss/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/concat_1/values_0"
  input: "softmax_cross_entropy_loss/Slice_1"
  input: "softmax_cross_entropy_loss/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Reshape_1"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/Cast"
  input: "softmax_cross_entropy_loss/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_loss/Reshape"
  input: "softmax_cross_entropy_loss/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_loss/Rank"
  input: "softmax_cross_entropy_loss/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_loss/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_loss/Shape"
  input: "softmax_cross_entropy_loss/Slice_2/begin"
  input: "softmax_cross_entropy_loss/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/xentropy"
  input: "softmax_cross_entropy_loss/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 560
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "softmax_cross_entropy_loss/ToFloat_1/x"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "softmax_cross_entropy_loss/Reshape_2"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Mul"
  input: "softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  input: "softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/num_present/Equal"
  input: "softmax_cross_entropy_loss/num_present/zeros_like"
  input: "softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 560
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 560
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "softmax_cross_entropy_loss/num_present/Select"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Sum"
  input: "softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "softmax_cross_entropy_loss/num_present"
  input: "softmax_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/num_present"
  input: "softmax_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/ones_like/Shape"
  input: "softmax_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Equal"
  input: "softmax_cross_entropy_loss/ones_like"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/div"
  op: "RealDiv"
  input: "softmax_cross_entropy_loss/Sum_1"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/zeros_like"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/value"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "softmax_cross_entropy_loss/div"
  input: "softmax_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "gradients/Fill"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Select_1"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Neg"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 560
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 560
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/mul_1"
  op: "Mul"
  input: "softmax_cross_entropy_loss/Reshape_2"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/mul_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 560
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/softmax_cross_entropy_loss/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/Reshape_grad/Reshape"
  input: "^gradients/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Reshape_grad/Reshape"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/add_9"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul_1"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_9_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_9_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_9_grad/Sum"
  op: "Sum"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/add_9_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_9_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/tuple/control_dependency"
  input: "rnn/rnn/gru_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_9/split:1"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_18_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_18_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_18_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_18_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/candidate_9/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_9"
  input: "gradients/rnn/rnn/gru_cell/add_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_19_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_19_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_19_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_19_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_19_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/sub_9_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_9_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/sub_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "rnn/rnn/gru_cell/candidate_9/Tanh"
  input: "gradients/rnn/rnn/gru_cell/mul_19_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_9/candidate/concat"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/candidate_9/candidate/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_9/split"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_9_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_18_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/tuple/control_dependency"
  input: "gradients/AddN"
  input: "rnn/rnn/gru_cell/gates_9/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "rnn/rnn/gru_cell/gates_9/Sigmoid"
  input: "gradients/rnn/rnn/gru_cell/gates_9/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/gates_9/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_9/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_9/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_9/gates/concat"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/gates_9/gates/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_18_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_18_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_8_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_8_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/add_8_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_8_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/tuple/control_dependency"
  input: "rnn/rnn/gru_cell/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_8/split:1"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_16_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_16_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_16_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_16_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/candidate_8/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_8"
  input: "gradients/rnn/rnn/gru_cell/add_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_17_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_17_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_17_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_17_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/sub_8_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_8_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/sub_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "rnn/rnn/gru_cell/candidate_8/Tanh"
  input: "gradients/rnn/rnn/gru_cell/mul_17_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_8/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_8/candidate/concat"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/candidate_8/candidate/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_8/split"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_8_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_16_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_2"
  input: "rnn/rnn/gru_cell/gates_8/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "rnn/rnn/gru_cell/gates_8/Sigmoid"
  input: "gradients/rnn/rnn/gru_cell/gates_8/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/gates_8/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_8/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_8/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_8/gates/concat"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/gates_8/gates/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_16_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_16_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_7_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_7_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_3"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_3"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/add_7_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_7_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/tuple/control_dependency"
  input: "rnn/rnn/gru_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_7/split:1"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_14_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_14_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_14_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_14_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/candidate_7/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_7"
  input: "gradients/rnn/rnn/gru_cell/add_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_15_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_15_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_15_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_15_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/sub_7_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_7_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/sub_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "rnn/rnn/gru_cell/candidate_7/Tanh"
  input: "gradients/rnn/rnn/gru_cell/mul_15_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_7/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_7/candidate/concat"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/candidate_7/candidate/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_7/split"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_7_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_14_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_4"
  input: "rnn/rnn/gru_cell/gates_7/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "rnn/rnn/gru_cell/gates_7/Sigmoid"
  input: "gradients/rnn/rnn/gru_cell/gates_7/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/gates_7/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_7/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_7/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_7/gates/concat"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/gates_7/gates/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_14_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_14_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/add_6_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_6_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/tuple/control_dependency"
  input: "rnn/rnn/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_6/split:1"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_12_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_12_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/candidate_6/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_6"
  input: "gradients/rnn/rnn/gru_cell/add_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_13_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_13_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_13_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_13_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/sub_6_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_6_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/sub_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "rnn/rnn/gru_cell/candidate_6/Tanh"
  input: "gradients/rnn/rnn/gru_cell/mul_13_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_6/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_6/candidate/concat"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/candidate_6/candidate/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_6/split"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_6_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_6"
  input: "rnn/rnn/gru_cell/gates_6/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "rnn/rnn/gru_cell/gates_6/Sigmoid"
  input: "gradients/rnn/rnn/gru_cell/gates_6/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/gates_6/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_6/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_6/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_6/gates/concat"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/gates_6/gates/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_12_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/add_5_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_5_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/tuple/control_dependency"
  input: "rnn/rnn/gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_5/split:1"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_10_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_10_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_10_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_10_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/candidate_5/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_5"
  input: "gradients/rnn/rnn/gru_cell/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_11_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_11_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_11_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_11_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/sub_5_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_5_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/sub_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "rnn/rnn/gru_cell/candidate_5/Tanh"
  input: "gradients/rnn/rnn/gru_cell/mul_11_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_5/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/concat"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_5/split"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_5_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_10_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_8"
  input: "rnn/rnn/gru_cell/gates_5/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "rnn/rnn/gru_cell/gates_5/Sigmoid"
  input: "gradients/rnn/rnn/gru_cell/gates_5/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/gates_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_5/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_5/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_5/gates/concat"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/gates_5/gates/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_10_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_10_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_9"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_9"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/add_4_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_4_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/tuple/control_dependency"
  input: "rnn/rnn/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_4/split:1"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_8_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_8_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/candidate_4/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_4"
  input: "gradients/rnn/rnn/gru_cell/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_9_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_9_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/sub_4_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_4_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/sub_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "rnn/rnn/gru_cell/candidate_4/Tanh"
  input: "gradients/rnn/rnn/gru_cell/mul_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_4/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/concat"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_4/split"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_4_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_10"
  input: "rnn/rnn/gru_cell/gates_4/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "rnn/rnn/gru_cell/gates_4/Sigmoid"
  input: "gradients/rnn/rnn/gru_cell/gates_4/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/gates_4/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_4/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_4/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_4/gates/concat"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/gates_4/gates/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_8_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/add_3_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_3_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/tuple/control_dependency"
  input: "rnn/rnn/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_3/split:1"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_6_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_6_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_3"
  input: "gradients/rnn/rnn/gru_cell/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_7_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_7_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/sub_3_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_3_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "rnn/rnn/gru_cell/candidate_3/Tanh"
  input: "gradients/rnn/rnn/gru_cell/mul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_3/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/concat"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_3/split"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_12"
  input: "rnn/rnn/gru_cell/gates_3/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "rnn/rnn/gru_cell/gates_3/Sigmoid"
  input: "gradients/rnn/rnn/gru_cell/gates_3/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_3/gates/concat"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/gates_3/gates/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_6_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_13"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_13"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/add_2_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_2_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/tuple/control_dependency"
  input: "rnn/rnn/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_2/split:1"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_4_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_4_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_2"
  input: "gradients/rnn/rnn/gru_cell/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_5_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_5_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/sub_2_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_2_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "rnn/rnn/gru_cell/candidate_2/Tanh"
  input: "gradients/rnn/rnn/gru_cell/mul_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_2/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/concat"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_2/split"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_14"
  input: "rnn/rnn/gru_cell/gates_2/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "rnn/rnn/gru_cell/gates_2/Sigmoid"
  input: "gradients/rnn/rnn/gru_cell/gates_2/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_2/gates/concat"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/gates_2/gates/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_4_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_15"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_15"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/add_1_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_1_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/tuple/control_dependency"
  input: "rnn/rnn/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_1/split:1"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_2_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_1"
  input: "gradients/rnn/rnn/gru_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_3_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_3_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/sub_1_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_1_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "rnn/rnn/gru_cell/candidate_1/Tanh"
  input: "gradients/rnn/rnn/gru_cell/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_1/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/concat"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_1/split"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_16"
  input: "rnn/rnn/gru_cell/gates_1/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "rnn/rnn/gru_cell/gates_1/Sigmoid"
  input: "gradients/rnn/rnn/gru_cell/gates_1/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_1/gates/concat"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/gates_1/gates/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_2_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/add_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_17"
  input: "gradients/rnn/rnn/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_17"
  input: "gradients/rnn/rnn/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/add_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/add_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_grad/tuple/control_dependency"
  input: "rnn/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates/split:1"
  input: "gradients/rnn/rnn/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/add_grad/tuple/control_dependency_1"
  input: "rnn/rnn/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub"
  input: "gradients/rnn/rnn/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/Neg"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "rnn/rnn/gru_cell/candidate/Tanh"
  input: "gradients/rnn/rnn/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate/candidate/concat"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/candidate/candidate/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "rnn/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/mul"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates/split"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/mul_1"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Sum_1"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/rnn/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^gradients/rnn/rnn/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/mul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/rnn/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_20"
  input: "rnn/rnn/gru_cell/gates/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "rnn/rnn/gru_cell/gates/Sigmoid"
  input: "gradients/rnn/rnn/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/rnn/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates/gates/concat"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_9/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "rnn/rnn/gru_cell/gates/gates/concat/axis"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\002\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/mod"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Shape"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/gates_9/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_1/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_2/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_3/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_4/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_4/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_5/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_5/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_6/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_6/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_7/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_7/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_8/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_8/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/rnn/gru_cell/gates_9/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/rnn/gru_cell/candidate_9/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/unstack_grad/stack"
  op: "Pack"
  input: "gradients/AddN_23"
  input: "gradients/AddN_24"
  input: "gradients/AddN_25"
  input: "gradients/AddN_26"
  input: "gradients/AddN_27"
  input: "gradients/AddN_28"
  input: "gradients/AddN_29"
  input: "gradients/AddN_30"
  input: "gradients/AddN_31"
  input: "gradients/AddN_32"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 560
          }
          dim {
            size: 10
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\035\000\000\000\000\000\0002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "gradients/EmbedSequence/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5600
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/EmbedSequence/embedding_lookup_grad/Size"
  input: "gradients/EmbedSequence/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/EmbedSequence/embedding_lookup_grad/ToInt32"
  input: "gradients/EmbedSequence/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/EmbedSequence/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/EmbedSequence/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "gradients/EmbedSequence/embedding_lookup_grad/ExpandDims"
  input: "gradients/EmbedSequence/embedding_lookup_grad/strided_slice"
  input: "gradients/EmbedSequence/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/unstack_grad/stack"
  input: "gradients/EmbedSequence/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5600
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/EmbedSequence/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "random_shuffle_queue_DequeueMany:1"
  input: "gradients/EmbedSequence/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5600
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7552
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Adam/Assign"
  op: "Assign"
  input: "EmbedSequence/embeddings/Adam"
  input: "EmbedSequence/embeddings/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Adam/read"
  op: "Identity"
  input: "EmbedSequence/embeddings/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7552
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Adam_1/Assign"
  op: "Assign"
  input: "EmbedSequence/embeddings/Adam_1"
  input: "EmbedSequence/embeddings/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "EmbedSequence/embeddings/Adam_1/read"
  op: "Identity"
  input: "EmbedSequence/embeddings/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "rnn/gru_cell/gates/kernel/Adam"
  input: "rnn/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "rnn/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "rnn/gru_cell/gates/kernel/Adam_1"
  input: "rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "rnn/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "rnn/gru_cell/gates/bias/Adam"
  input: "rnn/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "rnn/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "rnn/gru_cell/gates/bias/Adam_1"
  input: "rnn/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "rnn/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "rnn/gru_cell/candidate/kernel/Adam"
  input: "rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "rnn/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "rnn/gru_cell/candidate/kernel/Adam_1"
  input: "rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "rnn/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "rnn/gru_cell/candidate/bias/Adam"
  input: "rnn/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "rnn/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "rnn/gru_cell/candidate/bias/Adam_1"
  input: "rnn/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "rnn/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Adam/Assign"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Adam/read"
  op: "Identity"
  input: "dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Adam_1/read"
  op: "Identity"
  input: "dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Adam/Assign"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Adam/read"
  op: "Identity"
  input: "dense/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Adam_1/read"
  op: "Identity"
  input: "dense/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07000000029802322
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/Unique"
  op: "Unique"
  input: "gradients/EmbedSequence/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 5600
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/Shape"
  op: "Shape"
  input: "Adam/update_EmbedSequence/embeddings/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/strided_slice"
  op: "StridedSlice"
  input: "Adam/update_EmbedSequence/embeddings/Shape"
  input: "Adam/update_EmbedSequence/embeddings/strided_slice/stack"
  input: "Adam/update_EmbedSequence/embeddings/strided_slice/stack_1"
  input: "Adam/update_EmbedSequence/embeddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "gradients/EmbedSequence/embedding_lookup_grad/Reshape"
  input: "Adam/update_EmbedSequence/embeddings/Unique:1"
  input: "Adam/update_EmbedSequence/embeddings/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/sub"
  op: "Sub"
  input: "Adam/update_EmbedSequence/embeddings/sub/x"
  input: "beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/Sqrt"
  op: "Sqrt"
  input: "Adam/update_EmbedSequence/embeddings/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/mul"
  op: "Mul"
  input: "Adam/learning_rate"
  input: "Adam/update_EmbedSequence/embeddings/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/sub_1"
  op: "Sub"
  input: "Adam/update_EmbedSequence/embeddings/sub_1/x"
  input: "beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/truediv"
  op: "RealDiv"
  input: "Adam/update_EmbedSequence/embeddings/mul"
  input: "Adam/update_EmbedSequence/embeddings/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/sub_2"
  op: "Sub"
  input: "Adam/update_EmbedSequence/embeddings/sub_2/x"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/mul_1"
  op: "Mul"
  input: "Adam/update_EmbedSequence/embeddings/UnsortedSegmentSum"
  input: "Adam/update_EmbedSequence/embeddings/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/mul_2"
  op: "Mul"
  input: "EmbedSequence/embeddings/Adam/read"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/Assign"
  op: "Assign"
  input: "EmbedSequence/embeddings/Adam"
  input: "Adam/update_EmbedSequence/embeddings/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/ScatterAdd"
  op: "ScatterAdd"
  input: "EmbedSequence/embeddings/Adam"
  input: "Adam/update_EmbedSequence/embeddings/Unique"
  input: "Adam/update_EmbedSequence/embeddings/mul_1"
  input: "^Adam/update_EmbedSequence/embeddings/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/mul_3"
  op: "Mul"
  input: "Adam/update_EmbedSequence/embeddings/UnsortedSegmentSum"
  input: "Adam/update_EmbedSequence/embeddings/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/sub_3"
  op: "Sub"
  input: "Adam/update_EmbedSequence/embeddings/sub_3/x"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/mul_4"
  op: "Mul"
  input: "Adam/update_EmbedSequence/embeddings/mul_3"
  input: "Adam/update_EmbedSequence/embeddings/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/mul_5"
  op: "Mul"
  input: "EmbedSequence/embeddings/Adam_1/read"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/Assign_1"
  op: "Assign"
  input: "EmbedSequence/embeddings/Adam_1"
  input: "Adam/update_EmbedSequence/embeddings/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/ScatterAdd_1"
  op: "ScatterAdd"
  input: "EmbedSequence/embeddings/Adam_1"
  input: "Adam/update_EmbedSequence/embeddings/Unique"
  input: "Adam/update_EmbedSequence/embeddings/mul_4"
  input: "^Adam/update_EmbedSequence/embeddings/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/Sqrt_1"
  op: "Sqrt"
  input: "Adam/update_EmbedSequence/embeddings/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/mul_6"
  op: "Mul"
  input: "Adam/update_EmbedSequence/embeddings/truediv"
  input: "Adam/update_EmbedSequence/embeddings/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/add"
  op: "Add"
  input: "Adam/update_EmbedSequence/embeddings/Sqrt_1"
  input: "Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/truediv_1"
  op: "RealDiv"
  input: "Adam/update_EmbedSequence/embeddings/mul_6"
  input: "Adam/update_EmbedSequence/embeddings/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/AssignSub"
  op: "AssignSub"
  input: "EmbedSequence/embeddings"
  input: "Adam/update_EmbedSequence/embeddings/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_EmbedSequence/embeddings/group_deps"
  op: "NoOp"
  input: "^Adam/update_EmbedSequence/embeddings/AssignSub"
  input: "^Adam/update_EmbedSequence/embeddings/ScatterAdd"
  input: "^Adam/update_EmbedSequence/embeddings/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
}
node {
  name: "Adam/update_rnn/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/gru_cell/gates/kernel"
  input: "rnn/gru_cell/gates/kernel/Adam"
  input: "rnn/gru_cell/gates/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_rnn/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/gru_cell/gates/bias"
  input: "rnn/gru_cell/gates/bias/Adam"
  input: "rnn/gru_cell/gates/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_rnn/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/gru_cell/candidate/kernel"
  input: "rnn/gru_cell/candidate/kernel/Adam"
  input: "rnn/gru_cell/candidate/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_rnn/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/gru_cell/candidate/bias"
  input: "rnn/gru_cell/candidate/bias/Adam"
  input: "rnn/gru_cell/candidate/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_EmbedSequence/embeddings/group_deps"
  input: "^Adam/update_rnn/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_rnn/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_rnn/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_rnn/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  input: "^Adam/update_dense/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_EmbedSequence/embeddings/group_deps"
  input: "^Adam/update_rnn/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_rnn/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_rnn/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_rnn/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  input: "^Adam/update_dense/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/update_EmbedSequence/embeddings/group_deps"
  input: "^Adam/update_rnn/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_rnn/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_rnn/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_rnn/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  input: "^Adam/update_dense/bias/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^EmbedSequence/embeddings/Assign"
  input: "^rnn/gru_cell/gates/kernel/Assign"
  input: "^rnn/gru_cell/gates/bias/Assign"
  input: "^rnn/gru_cell/candidate/kernel/Assign"
  input: "^rnn/gru_cell/candidate/bias/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense/bias/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^EmbedSequence/embeddings/Adam/Assign"
  input: "^EmbedSequence/embeddings/Adam_1/Assign"
  input: "^rnn/gru_cell/gates/kernel/Adam/Assign"
  input: "^rnn/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^rnn/gru_cell/gates/bias/Adam/Assign"
  input: "^rnn/gru_cell/gates/bias/Adam_1/Assign"
  input: "^rnn/gru_cell/candidate/kernel/Adam/Assign"
  input: "^rnn/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^rnn/gru_cell/candidate/bias/Adam/Assign"
  input: "^rnn/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^dense/kernel/Adam/Assign"
  input: "^dense/kernel/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "EmbedSequence/embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "EmbedSequence/embeddings/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "EmbedSequence/embeddings/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 24
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: "global_step"
        string_val: "EmbedSequence/embeddings"
        string_val: "rnn/gru_cell/gates/kernel"
        string_val: "rnn/gru_cell/gates/bias"
        string_val: "rnn/gru_cell/candidate/kernel"
        string_val: "rnn/gru_cell/candidate/bias"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "EmbedSequence/embeddings/Adam"
        string_val: "EmbedSequence/embeddings/Adam_1"
        string_val: "rnn/gru_cell/gates/kernel/Adam"
        string_val: "rnn/gru_cell/gates/kernel/Adam_1"
        string_val: "rnn/gru_cell/gates/bias/Adam"
        string_val: "rnn/gru_cell/gates/bias/Adam_1"
        string_val: "rnn/gru_cell/candidate/kernel/Adam"
        string_val: "rnn/gru_cell/candidate/kernel/Adam_1"
        string_val: "rnn/gru_cell/candidate/bias/Adam"
        string_val: "rnn/gru_cell/candidate/bias/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "EmbedSequence/embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "EmbedSequence/embeddings/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "EmbedSequence/embeddings/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "rnn/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 24
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: "global_step"
        string_val: "EmbedSequence/embeddings"
        string_val: "rnn/gru_cell/gates/kernel"
        string_val: "rnn/gru_cell/gates/bias"
        string_val: "rnn/gru_cell/candidate/kernel"
        string_val: "rnn/gru_cell/candidate/bias"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "EmbedSequence/embeddings/Adam"
        string_val: "EmbedSequence/embeddings/Adam_1"
        string_val: "rnn/gru_cell/gates/kernel/Adam"
        string_val: "rnn/gru_cell/gates/kernel/Adam_1"
        string_val: "rnn/gru_cell/gates/bias/Adam"
        string_val: "rnn/gru_cell/gates/bias/Adam_1"
        string_val: "rnn/gru_cell/candidate/kernel/Adam"
        string_val: "rnn/gru_cell/candidate/kernel/Adam_1"
        string_val: "rnn/gru_cell/candidate/bias/Adam"
        string_val: "rnn/gru_cell/candidate/bias/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_051a80bbe54340c591b4b3e7091613c6/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: "EmbedSequence/embeddings"
        string_val: "EmbedSequence/embeddings/Adam"
        string_val: "EmbedSequence/embeddings/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "global_step"
        string_val: "rnn/gru_cell/candidate/bias"
        string_val: "rnn/gru_cell/candidate/bias/Adam"
        string_val: "rnn/gru_cell/candidate/bias/Adam_1"
        string_val: "rnn/gru_cell/candidate/kernel"
        string_val: "rnn/gru_cell/candidate/kernel/Adam"
        string_val: "rnn/gru_cell/candidate/kernel/Adam_1"
        string_val: "rnn/gru_cell/gates/bias"
        string_val: "rnn/gru_cell/gates/bias/Adam"
        string_val: "rnn/gru_cell/gates/bias/Adam_1"
        string_val: "rnn/gru_cell/gates/kernel"
        string_val: "rnn/gru_cell/gates/kernel/Adam"
        string_val: "rnn/gru_cell/gates/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "EmbedSequence/embeddings"
  input: "EmbedSequence/embeddings/Adam"
  input: "EmbedSequence/embeddings/Adam_1"
  input: "beta1_power"
  input: "beta2_power"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "global_step"
  input: "rnn/gru_cell/candidate/bias"
  input: "rnn/gru_cell/candidate/bias/Adam"
  input: "rnn/gru_cell/candidate/bias/Adam_1"
  input: "rnn/gru_cell/candidate/kernel"
  input: "rnn/gru_cell/candidate/kernel/Adam"
  input: "rnn/gru_cell/candidate/kernel/Adam_1"
  input: "rnn/gru_cell/gates/bias"
  input: "rnn/gru_cell/gates/bias/Adam"
  input: "rnn/gru_cell/gates/bias/Adam_1"
  input: "rnn/gru_cell/gates/kernel"
  input: "rnn/gru_cell/gates/kernel/Adam"
  input: "rnn/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "EmbedSequence/embeddings"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "EmbedSequence/embeddings"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "EmbedSequence/embeddings/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "EmbedSequence/embeddings/Adam"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "EmbedSequence/embeddings/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "EmbedSequence/embeddings/Adam_1"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7552
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@EmbedSequence/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dense/bias"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dense/kernel"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "rnn/gru_cell/candidate/bias"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/candidate/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "rnn/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/candidate/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "rnn/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "rnn/gru_cell/candidate/kernel"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/candidate/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "rnn/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/candidate/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "rnn/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "rnn/gru_cell/gates/bias"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/gates/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "rnn/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/gates/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "rnn/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "rnn/gru_cell/gates/kernel"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/gates/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "rnn/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/gru_cell/gates/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "rnn/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 24
}
